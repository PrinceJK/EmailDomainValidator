name: Publish NuGet Package

on:
  push:
    branches:
      - master  # Change to 'main' if needed

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Generate Version Number
        id: get_version
        run: |
          VERSION_PREFIX=$(cat EmailDomainValidator/EmailDomainValidator.csproj | grep -oPm1 '(?<=<VersionPrefix>)[^<]+')
          BUILD_NUMBER=${{ github.run_number }}
          FULL_VERSION="$VERSION_PREFIX.$BUILD_NUMBER"
          echo "VERSION=$FULL_VERSION" >> $GITHUB_ENV
          echo "Generated version: $FULL_VERSION"

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output nupkg /p:Version=${{ env.VERSION }}

      - name: Publish to NuGet
        if: success()
        run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: nupkg/*.nupkg
          draft: false
          prerelease: false
